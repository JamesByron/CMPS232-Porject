%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../paper/bps.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Tue Jun 12 22:56:28 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 302 266
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -50 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 302 50 lineto 302 266 lineto 50 266 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../paper/bps.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (james)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jun 12 22:56:28 2018)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 150 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 5040.00 4320.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1005 480 M
63 0 V
3701 0 R
-63 0 V
stroke
915 480 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 0)]
] -50.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1005 964 M
63 0 V
3701 0 R
-63 0 V
stroke
915 964 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 20000)]
] -50.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1005 1448 M
63 0 V
3701 0 R
-63 0 V
stroke
915 1448 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 40000)]
] -50.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1005 1932 M
63 0 V
3701 0 R
-63 0 V
stroke
915 1932 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 60000)]
] -50.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1005 2417 M
63 0 V
3701 0 R
-63 0 V
stroke
915 2417 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 80000)]
] -50.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1005 2901 M
63 0 V
3701 0 R
-63 0 V
stroke
915 2901 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 100000)]
] -50.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1005 3385 M
63 0 V
3701 0 R
-63 0 V
stroke
915 3385 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 120000)]
] -50.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1005 3869 M
63 0 V
3701 0 R
-63 0 V
stroke
915 3869 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 140000)]
] -50.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1005 480 M
0 63 V
0 3326 R
0 -63 V
stroke
1005 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 1)]
] -50.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1347 480 M
0 31 V
0 3358 R
0 -31 V
1688 480 M
0 63 V
0 3326 R
0 -63 V
stroke
1688 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 100)]
] -50.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2030 480 M
0 31 V
0 3358 R
0 -31 V
2371 480 M
0 63 V
0 3326 R
0 -63 V
stroke
2371 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 10000)]
] -50.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2713 480 M
0 31 V
0 3358 R
0 -31 V
3054 480 M
0 63 V
0 3326 R
0 -63 V
stroke
3054 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 1e+06)]
] -50.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3396 480 M
0 31 V
0 3358 R
0 -31 V
3737 480 M
0 63 V
0 3326 R
0 -63 V
stroke
3737 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 1e+08)]
] -50.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4079 480 M
0 31 V
0 3358 R
0 -31 V
4420 480 M
0 63 V
0 3326 R
0 -63 V
stroke
4420 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 1e+10)]
] -50.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4762 480 M
0 31 V
0 3358 R
0 -31 V
stroke
LTb
LCb setrgbcolor
1005 3869 N
0 -3389 V
3764 0 V
0 3389 V
-3764 0 V
Z stroke
LCb setrgbcolor
120 2174 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 150.0 0.0 true true 0 (KB per Second)]
] -50.0 MCshow
grestore
LTb
LCb setrgbcolor
2887 105 M
[ [(Helvetica) 150.0 0.0 true true 0 (File Size \(bytes\))]
] -50.0 MCshow
LTb
2887 4094 M
[ [(Helvetica) 150.0 0.0 true true 0 (Average Transfer Speed by File Size)]
] -50.0 MCshow
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UP
1.000 UL
LT0
0.00 0.00 0.00 C 1313 482 Pls
1361 483 Pls
1509 486 Pls
1579 490 Pls
1631 495 Pls
1649 496 Pls
1688 501 Pls
1704 505 Pls
1725 508 Pls
1749 513 Pls
1754 516 Pls
1796 525 Pls
1800 529 Pls
1821 534 Pls
1824 534 Pls
1842 538 Pls
1853 548 Pls
1863 555 Pls
1879 564 Pls
1880 562 Pls
1886 565 Pls
1899 574 Pls
1899 575 Pls
1900 574 Pls
1901 574 Pls
1901 573 Pls
1902 575 Pls
1904 571 Pls
1904 574 Pls
1904 574 Pls
1905 574 Pls
1905 579 Pls
1927 596 Pls
1929 598 Pls
1930 599 Pls
1931 598 Pls
1932 596 Pls
1935 607 Pls
1936 571 Pls
1938 609 Pls
1938 606 Pls
1938 608 Pls
1939 607 Pls
1940 608 Pls
1940 608 Pls
1940 606 Pls
1941 607 Pls
1942 607 Pls
1951 620 Pls
1952 617 Pls
1952 613 Pls
1953 623 Pls
1953 622 Pls
1953 620 Pls
1953 609 Pls
1954 612 Pls
1954 620 Pls
1954 630 Pls
1955 629 Pls
1956 618 Pls
1957 617 Pls
1957 624 Pls
1958 628 Pls
1959 623 Pls
1960 622 Pls
1960 624 Pls
1960 629 Pls
1960 626 Pls
1962 629 Pls
1965 627 Pls
1965 600 Pls
1965 621 Pls
1965 569 Pls
1967 608 Pls
1968 609 Pls
1970 607 Pls
1973 604 Pls
1976 608 Pls
1976 607 Pls
1990 622 Pls
1993 624 Pls
1994 627 Pls
1995 626 Pls
2000 630 Pls
2002 633 Pls
2006 633 Pls
2025 633 Pls
2032 636 Pls
2044 659 Pls
2045 684 Pls
2051 548 Pls
2054 682 Pls
2068 637 Pls
2094 716 Pls
2101 767 Pls
2102 756 Pls
2116 802 Pls
2117 784 Pls
2119 768 Pls
2122 845 Pls
2124 868 Pls
2128 817 Pls
2148 756 Pls
2164 822 Pls
2169 866 Pls
2169 772 Pls
2169 867 Pls
2175 877 Pls
2178 930 Pls
2184 926 Pls
2191 942 Pls
2193 855 Pls
2198 902 Pls
2201 1020 Pls
2207 1162 Pls
2219 955 Pls
2221 946 Pls
2222 1045 Pls
2227 840 Pls
2231 1076 Pls
2232 1076 Pls
2242 1064 Pls
2245 1148 Pls
2248 1135 Pls
2249 1076 Pls
2250 1080 Pls
2252 1145 Pls
2259 1143 Pls
2260 1306 Pls
2260 1183 Pls
2260 1191 Pls
2261 1138 Pls
2261 1165 Pls
2261 1218 Pls
2261 1200 Pls
2262 1243 Pls
2262 1193 Pls
2262 1153 Pls
2264 1214 Pls
2264 1213 Pls
2264 1147 Pls
2265 1012 Pls
2265 1206 Pls
2266 1036 Pls
2266 1191 Pls
2266 1198 Pls
2266 1040 Pls
2266 1234 Pls
2266 1179 Pls
2266 1137 Pls
2266 1045 Pls
2266 1264 Pls
2266 1175 Pls
2266 1193 Pls
2267 1198 Pls
2267 1245 Pls
2267 1235 Pls
2267 1178 Pls
2267 1047 Pls
2267 1210 Pls
2267 1031 Pls
2267 1166 Pls
2267 1225 Pls
2268 1118 Pls
2268 1176 Pls
2268 1031 Pls
2268 1181 Pls
2268 1189 Pls
2269 1264 Pls
2269 793 Pls
2270 716 Pls
2270 1263 Pls
2279 1322 Pls
2282 1273 Pls
2282 1121 Pls
2282 1136 Pls
2282 1250 Pls
2283 1129 Pls
2283 1295 Pls
2283 1280 Pls
2283 1005 Pls
2283 1318 Pls
2284 1249 Pls
2284 1121 Pls
2284 1277 Pls
2284 1252 Pls
2284 1241 Pls
2285 1267 Pls
2285 1333 Pls
2285 1290 Pls
2294 1368 Pls
2306 1424 Pls
2321 1552 Pls
2332 1318 Pls
2333 1592 Pls
2335 1422 Pls
2338 1632 Pls
2342 1632 Pls
2344 1479 Pls
2347 1342 Pls
2348 1545 Pls
2355 878 Pls
2355 1486 Pls
2362 1545 Pls
2366 1639 Pls
2368 1775 Pls
2373 1552 Pls
2374 1881 Pls
2376 1529 Pls
2376 1691 Pls
2377 1757 Pls
2379 1413 Pls
2381 955 Pls
2384 1782 Pls
2385 1721 Pls
2389 1938 Pls
2390 1967 Pls
2391 1570 Pls
2398 1919 Pls
2399 1984 Pls
2401 2155 Pls
2403 1996 Pls
2403 1977 Pls
2404 1886 Pls
2404 1933 Pls
2405 2096 Pls
2406 1643 Pls
2407 1035 Pls
2408 1971 Pls
2408 1885 Pls
2408 2092 Pls
2408 1921 Pls
2408 1917 Pls
2408 1996 Pls
2409 2009 Pls
2409 1892 Pls
2409 1928 Pls
2409 1992 Pls
2409 1955 Pls
2409 1978 Pls
2409 1924 Pls
2410 1982 Pls
2410 1963 Pls
2410 2006 Pls
2410 1723 Pls
2410 2033 Pls
2410 2004 Pls
2410 1977 Pls
2411 1990 Pls
2412 1996 Pls
2412 1956 Pls
2412 2052 Pls
2412 1925 Pls
2412 2050 Pls
2412 1944 Pls
2412 2024 Pls
2413 1033 Pls
2413 2019 Pls
2414 2066 Pls
2414 2071 Pls
2414 2069 Pls
2414 2020 Pls
2414 2024 Pls
2414 2618 Pls
2414 1982 Pls
2414 2042 Pls
2415 1706 Pls
2416 2017 Pls
2416 2096 Pls
2416 2074 Pls
2416 2010 Pls
2416 1987 Pls
2420 1954 Pls
2420 2026 Pls
2420 1975 Pls
2422 2121 Pls
2422 1823 Pls
2424 1781 Pls
2424 2090 Pls
2424 2061 Pls
2424 2097 Pls
2424 2094 Pls
2424 2107 Pls
2424 2027 Pls
2424 2017 Pls
2424 2147 Pls
2425 2009 Pls
2425 2086 Pls
2426 2041 Pls
2427 2111 Pls
2429 1955 Pls
2430 2240 Pls
2430 2135 Pls
2431 1989 Pls
2435 1882 Pls
2440 2248 Pls
2441 2206 Pls
2442 2371 Pls
2448 2204 Pls
2449 2002 Pls
2450 2167 Pls
2453 2340 Pls
2456 1912 Pls
2459 2331 Pls
2460 2280 Pls
2460 2377 Pls
2460 3068 Pls
2462 2179 Pls
2463 2357 Pls
2464 2353 Pls
2465 2265 Pls
2466 2142 Pls
2473 2670 Pls
2473 2648 Pls
2475 2349 Pls
2478 2142 Pls
2480 2241 Pls
2481 2415 Pls
2487 2831 Pls
2488 2836 Pls
2489 2539 Pls
2490 1198 Pls
2491 2803 Pls
2496 2708 Pls
2496 2755 Pls
2498 2839 Pls
2500 2623 Pls
2500 3004 Pls
2501 2963 Pls
2501 3041 Pls
2502 3125 Pls
2502 3278 Pls
2504 2647 Pls
2505 3241 Pls
2507 2520 Pls
2510 2099 Pls
2510 2748 Pls
2511 3200 Pls
2512 3214 Pls
2514 3319 Pls
2515 2869 Pls
2516 2393 Pls
2517 3237 Pls
2519 2568 Pls
2519 1348 Pls
2520 3108 Pls
2521 3335 Pls
2521 3207 Pls
2522 2472 Pls
2523 3476 Pls
2524 2751 Pls
2526 3230 Pls
2530 1325 Pls
2536 1399 Pls
2538 1402 Pls
2538 986 Pls
2540 1396 Pls
2542 1441 Pls
2548 1556 Pls
2549 995 Pls
2549 1472 Pls
2556 978 Pls
2556 1430 Pls
2558 1540 Pls
2564 847 Pls
2564 1578 Pls
2567 1529 Pls
2569 1592 Pls
2570 1054 Pls
2570 1681 Pls
2572 897 Pls
2576 1569 Pls
2584 1655 Pls
2584 1154 Pls
2584 1751 Pls
2586 1696 Pls
2586 1112 Pls
2586 1763 Pls
2586 1741 Pls
2587 1757 Pls
2587 1612 Pls
2588 1826 Pls
2590 1111 Pls
2592 949 Pls
2596 886 Pls
2599 1913 Pls
2604 1162 Pls
2608 1172 Pls
2617 1720 Pls
2617 1698 Pls
2618 946 Pls
2619 1873 Pls
2619 1910 Pls
2619 1916 Pls
2623 1867 Pls
2628 935 Pls
2632 1738 Pls
2634 1908 Pls
2634 1649 Pls
2636 1870 Pls
2642 917 Pls
2644 896 Pls
2646 1111 Pls
2648 1622 Pls
2649 1671 Pls
2652 1624 Pls
2656 1691 Pls
2659 1617 Pls
2665 1708 Pls
2674 1792 Pls
2675 1844 Pls
2682 1943 Pls
2682 1868 Pls
2686 1874 Pls
2689 2014 Pls
2691 1044 Pls
2694 951 Pls
2698 1043 Pls
2699 970 Pls
2701 974 Pls
2709 949 Pls
2709 1841 Pls
2719 944 Pls
2725 1896 Pls
2726 955 Pls
2737 1906 Pls
2742 959 Pls
2745 2072 Pls
2757 985 Pls
2759 973 Pls
2759 1055 Pls
2764 1141 Pls
2765 1120 Pls
2767 1166 Pls
2772 983 Pls
2772 1066 Pls
2776 1195 Pls
2778 1169 Pls
2781 1084 Pls
2785 1102 Pls
2785 1007 Pls
2794 1173 Pls
2798 1127 Pls
2798 1159 Pls
2799 1141 Pls
2803 1118 Pls
2808 1090 Pls
2809 993 Pls
2809 1112 Pls
2811 1118 Pls
2811 1000 Pls
2839 1100 Pls
2840 1065 Pls
2840 1090 Pls
2844 1035 Pls
2845 1020 Pls
2852 1125 Pls
2878 1042 Pls
2906 1077 Pls
2906 1069 Pls
2910 1070 Pls
2913 1047 Pls
2914 1053 Pls
2920 1115 Pls
2925 1044 Pls
2930 1079 Pls
2935 1013 Pls
2936 1098 Pls
2940 1055 Pls
2956 1036 Pls
2967 1012 Pls
3027 1044 Pls
3033 1087 Pls
3037 1042 Pls
3038 1085 Pls
3038 1093 Pls
3039 1040 Pls
3082 1019 Pls
3087 1031 Pls
3105 1010 Pls
3123 1015 Pls
3127 1006 Pls
3127 1002 Pls
3127 1011 Pls
3128 1017 Pls
3129 1005 Pls
3129 1020 Pls
3132 1020 Pls
3133 970 Pls
3134 1009 Pls
3134 999 Pls
3136 1006 Pls
3137 1004 Pls
3137 1004 Pls
3137 1003 Pls
3140 1005 Pls
3140 994 Pls
3142 1011 Pls
3143 1019 Pls
3143 1022 Pls
3144 1007 Pls
3148 1007 Pls
3148 1000 Pls
3149 1007 Pls
3150 1025 Pls
3154 1022 Pls
3157 1019 Pls
3161 988 Pls
3166 1018 Pls
3166 1035 Pls
3169 988 Pls
3173 1009 Pls
3175 981 Pls
3177 1020 Pls
3178 994 Pls
3179 1002 Pls
3179 1040 Pls
3180 993 Pls
3181 1023 Pls
3183 1027 Pls
3183 990 Pls
3188 1025 Pls
3190 1009 Pls
3192 1001 Pls
3197 966 Pls
3198 1015 Pls
3200 997 Pls
3201 1008 Pls
3206 1010 Pls
3208 1007 Pls
3209 1004 Pls
3223 998 Pls
3229 988 Pls
3230 979 Pls
3234 1006 Pls
3239 995 Pls
3240 981 Pls
3243 984 Pls
3245 982 Pls
3245 982 Pls
3245 1001 Pls
3248 973 Pls
3249 987 Pls
3250 1004 Pls
3252 968 Pls
3253 980 Pls
3256 968 Pls
3256 979 Pls
3258 981 Pls
3262 981 Pls
3263 988 Pls
3266 1027 Pls
3266 965 Pls
3269 958 Pls
3270 983 Pls
3270 987 Pls
3271 990 Pls
3272 992 Pls
3272 991 Pls
3273 991 Pls
3275 1004 Pls
3276 974 Pls
3277 987 Pls
3278 979 Pls
3279 972 Pls
3279 971 Pls
3279 979 Pls
3280 966 Pls
3281 989 Pls
3281 955 Pls
3282 972 Pls
3283 978 Pls
3283 976 Pls
3284 971 Pls
3284 974 Pls
3284 963 Pls
3285 974 Pls
3285 982 Pls
3285 955 Pls
3287 964 Pls
3287 963 Pls
3287 985 Pls
3288 989 Pls
3288 975 Pls
3288 1038 Pls
3288 968 Pls
3288 971 Pls
3288 970 Pls
3289 986 Pls
3289 969 Pls
3289 955 Pls
3291 989 Pls
3291 967 Pls
3291 995 Pls
3291 972 Pls
3291 988 Pls
3291 959 Pls
3292 971 Pls
3292 976 Pls
3293 977 Pls
3293 965 Pls
3294 981 Pls
3295 973 Pls
3295 964 Pls
3295 968 Pls
3296 970 Pls
3297 975 Pls
3298 970 Pls
3299 984 Pls
3299 979 Pls
3299 970 Pls
3299 961 Pls
3300 975 Pls
3301 975 Pls
3306 979 Pls
3348 981 Pls
3365 977 Pls
3398 908 Pls
3400 980 Pls
3680 952 Pls
4431 925 Pls
% End plot #1
1.000 UL
LTb
LCb setrgbcolor
1005 3869 N
0 -3389 V
3764 0 V
0 3389 V
-3764 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
