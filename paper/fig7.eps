%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../paper/busyness.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Tue Jun 12 22:56:28 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 302 266
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -50 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 302 50 lineto 302 266 lineto 50 266 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../paper/busyness.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (james)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jun 12 22:56:28 2018)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 150 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 5040.00 4320.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
735 480 M
63 0 V
3971 0 R
-63 0 V
stroke
645 480 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 0)]
] -50.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
735 1126 M
63 0 V
3971 0 R
-63 0 V
stroke
645 1126 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 0.2)]
] -50.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
735 1771 M
63 0 V
3971 0 R
-63 0 V
stroke
645 1771 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 0.4)]
] -50.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
735 2417 M
63 0 V
3971 0 R
-63 0 V
stroke
645 2417 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 0.6)]
] -50.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
735 3062 M
63 0 V
3971 0 R
-63 0 V
stroke
645 3062 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 0.8)]
] -50.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
735 3708 M
63 0 V
3971 0 R
-63 0 V
stroke
645 3708 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 1)]
] -50.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
735 480 M
0 63 V
0 3326 R
0 -63 V
stroke
735 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 1)]
] -50.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1101 480 M
0 31 V
0 3358 R
0 -31 V
1467 480 M
0 63 V
0 3326 R
0 -63 V
stroke
1467 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 100)]
] -50.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1833 480 M
0 31 V
0 3358 R
0 -31 V
2199 480 M
0 63 V
0 3326 R
0 -63 V
stroke
2199 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 10000)]
] -50.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2565 480 M
0 31 V
0 3358 R
0 -31 V
2931 480 M
0 63 V
0 3326 R
0 -63 V
stroke
2931 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 1e+06)]
] -50.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3297 480 M
0 31 V
0 3358 R
0 -31 V
3663 480 M
0 63 V
0 3326 R
0 -63 V
stroke
3663 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 1e+08)]
] -50.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4029 480 M
0 31 V
0 3358 R
0 -31 V
4395 480 M
0 63 V
0 3326 R
0 -63 V
stroke
4395 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 1e+10)]
] -50.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4761 480 M
0 31 V
0 3358 R
0 -31 V
stroke
LTb
LCb setrgbcolor
735 3869 N
735 480 L
4034 0 V
0 3389 V
-4034 0 V
Z stroke
LCb setrgbcolor
120 2174 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 150.0 0.0 true true 0 (Fraction of Communication Time Transferring Data)]
] -50.0 MCshow
grestore
LTb
LCb setrgbcolor
2752 105 M
[ [(Helvetica) 150.0 0.0 true true 0 (File Size)]
] -50.0 MCshow
LTb
2752 4094 M
[ [(Helvetica) 150.0 0.0 true true 0 (Efficiency of File Transfers by File Size)]
] -50.0 MCshow
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UP
1.000 UL
LT0
0.00 0.00 0.00 C 1066 715 Pls
1116 738 Pls
1276 741 Pls
1350 712 Pls
1406 738 Pls
1425 740 Pls
1467 744 Pls
1484 729 Pls
1506 731 Pls
1533 736 Pls
1538 713 Pls
1583 738 Pls
1587 735 Pls
1609 738 Pls
1613 735 Pls
1632 745 Pls
1644 725 Pls
1655 716 Pls
1672 735 Pls
1673 739 Pls
1679 738 Pls
1693 735 Pls
1694 735 Pls
1694 727 Pls
1695 733 Pls
1696 722 Pls
1696 722 Pls
1698 720 Pls
1699 723 Pls
1699 716 Pls
1699 734 Pls
1700 727 Pls
1723 729 Pls
1726 735 Pls
1726 728 Pls
1728 705 Pls
1728 713 Pls
1732 731 Pls
1733 755 Pls
1735 711 Pls
1735 720 Pls
1735 700 Pls
1736 714 Pls
1737 717 Pls
1737 708 Pls
1737 743 Pls
1739 714 Pls
1739 738 Pls
1749 717 Pls
1750 706 Pls
1750 715 Pls
1751 705 Pls
1751 695 Pls
1751 709 Pls
1751 733 Pls
1752 725 Pls
1752 728 Pls
1752 704 Pls
1753 714 Pls
1754 713 Pls
1755 716 Pls
1756 727 Pls
1756 698 Pls
1757 717 Pls
1758 726 Pls
1758 724 Pls
1759 722 Pls
1759 726 Pls
1761 720 Pls
1764 727 Pls
1764 960 Pls
1764 727 Pls
1764 1200 Pls
1766 1007 Pls
1767 1001 Pls
1769 998 Pls
1772 987 Pls
1776 1012 Pls
1776 1030 Pls
1790 1013 Pls
1794 1025 Pls
1795 995 Pls
1796 988 Pls
1801 973 Pls
1804 1037 Pls
1808 1029 Pls
1828 996 Pls
1835 1087 Pls
1848 1171 Pls
1849 1007 Pls
1856 1645 Pls
1860 1035 Pls
1875 1453 Pls
1902 1155 Pls
1910 992 Pls
1911 1021 Pls
1926 1005 Pls
1927 1002 Pls
1929 1101 Pls
1932 931 Pls
1935 762 Pls
1938 997 Pls
1959 1309 Pls
1977 1103 Pls
1982 1172 Pls
1982 1411 Pls
1982 1118 Pls
1989 1072 Pls
1992 950 Pls
1998 1011 Pls
2006 1018 Pls
2008 1160 Pls
2014 1056 Pls
2017 986 Pls
2023 739 Pls
2036 1003 Pls
2038 1123 Pls
2039 1056 Pls
2045 1394 Pls
2049 1068 Pls
2050 1086 Pls
2061 1122 Pls
2064 998 Pls
2067 957 Pls
2068 1197 Pls
2069 1103 Pls
2072 958 Pls
2079 1210 Pls
2080 761 Pls
2080 996 Pls
2080 1013 Pls
2081 1046 Pls
2081 1048 Pls
2081 995 Pls
2081 999 Pls
2082 975 Pls
2082 1027 Pls
2082 1042 Pls
2084 1025 Pls
2084 1034 Pls
2085 1045 Pls
2085 1285 Pls
2085 1076 Pls
2086 1285 Pls
2087 1017 Pls
2087 1047 Pls
2087 1278 Pls
2087 997 Pls
2087 1049 Pls
2087 1136 Pls
2087 1243 Pls
2087 1003 Pls
2087 1066 Pls
2087 1041 Pls
2087 1047 Pls
2087 996 Pls
2087 1003 Pls
2087 1051 Pls
2088 1316 Pls
2088 1066 Pls
2088 1341 Pls
2088 1030 Pls
2088 1009 Pls
2088 1174 Pls
2088 1046 Pls
2088 1264 Pls
2088 1043 Pls
2089 1136 Pls
2089 1013 Pls
2090 1600 Pls
2090 1540 Pls
2091 988 Pls
2101 997 Pls
2103 1030 Pls
2103 1228 Pls
2104 1215 Pls
2104 1040 Pls
2104 1253 Pls
2105 1035 Pls
2105 1056 Pls
2105 1435 Pls
2105 1007 Pls
2105 1056 Pls
2106 1238 Pls
2106 1033 Pls
2106 1045 Pls
2106 1065 Pls
2106 1061 Pls
2107 992 Pls
2107 1047 Pls
2117 1056 Pls
2129 1005 Pls
2145 969 Pls
2157 1073 Pls
2158 973 Pls
2160 1098 Pls
2164 959 Pls
2167 973 Pls
2170 1095 Pls
2173 1240 Pls
2174 1064 Pls
2182 1521 Pls
2182 1103 Pls
2189 980 Pls
2194 962 Pls
2195 956 Pls
2201 1115 Pls
2202 933 Pls
2204 1113 Pls
2205 1059 Pls
2205 1018 Pls
2207 1166 Pls
2209 1492 Pls
2213 944 Pls
2214 1104 Pls
2219 964 Pls
2220 972 Pls
2221 1165 Pls
2228 935 Pls
2229 992 Pls
2232 909 Pls
2233 989 Pls
2234 1006 Pls
2234 1008 Pls
2234 998 Pls
2236 973 Pls
2237 1184 Pls
2238 1490 Pls
2239 1015 Pls
2239 1072 Pls
2239 959 Pls
2239 1015 Pls
2239 1038 Pls
2239 1023 Pls
2239 995 Pls
2239 1041 Pls
2240 1033 Pls
2240 1001 Pls
2240 1039 Pls
2240 1045 Pls
2240 1051 Pls
2240 1014 Pls
2240 1045 Pls
2240 981 Pls
2241 1191 Pls
2241 997 Pls
2241 1007 Pls
2241 1023 Pls
2242 1004 Pls
2243 1010 Pls
2243 1021 Pls
2243 1004 Pls
2243 1047 Pls
2243 1004 Pls
2243 1032 Pls
2243 1024 Pls
2244 1543 Pls
2244 1031 Pls
2245 1040 Pls
2245 1009 Pls
2245 979 Pls
2245 1015 Pls
2245 1019 Pls
2245 727 Pls
2245 1013 Pls
2246 1003 Pls
2246 1113 Pls
2247 1009 Pls
2247 1010 Pls
2247 1024 Pls
2247 1020 Pls
2248 1029 Pls
2251 1052 Pls
2252 1014 Pls
2252 1014 Pls
2254 1002 Pls
2254 1225 Pls
2255 1151 Pls
2255 1017 Pls
2255 1027 Pls
2256 1007 Pls
2256 1026 Pls
2256 1015 Pls
2256 1032 Pls
2256 1000 Pls
2256 1010 Pls
2257 1017 Pls
2257 1021 Pls
2258 1029 Pls
2259 1044 Pls
2262 960 Pls
2262 918 Pls
2263 936 Pls
2264 955 Pls
2268 1184 Pls
2273 917 Pls
2274 955 Pls
2276 998 Pls
2282 1474 Pls
2283 1447 Pls
2284 1354 Pls
2287 1094 Pls
2290 1374 Pls
2294 1332 Pls
2294 1333 Pls
2294 1328 Pls
2295 739 Pls
2296 1293 Pls
2297 1327 Pls
2298 1321 Pls
2300 1458 Pls
2301 1358 Pls
2308 1155 Pls
2309 1177 Pls
2310 1418 Pls
2314 1443 Pls
2315 1316 Pls
2317 1314 Pls
2324 1163 Pls
2324 1174 Pls
2325 1316 Pls
2327 2080 Pls
2328 1169 Pls
2333 1167 Pls
2333 1273 Pls
2335 1177 Pls
2337 1312 Pls
2338 1143 Pls
2338 1171 Pls
2339 1155 Pls
2340 1040 Pls
2340 1045 Pls
2342 1358 Pls
2343 1074 Pls
2344 1289 Pls
2348 1729 Pls
2348 1168 Pls
2349 1057 Pls
2350 1043 Pls
2352 1049 Pls
2353 1144 Pls
2355 1255 Pls
2355 1037 Pls
2358 1357 Pls
2358 2007 Pls
2358 1039 Pls
2360 1114 Pls
2360 1009 Pls
2361 1284 Pls
2361 1028 Pls
2363 1260 Pls
2365 1064 Pls
2369 1777 Pls
2376 1579 Pls
2377 1615 Pls
2378 1861 Pls
2380 1750 Pls
2383 1768 Pls
2389 1697 Pls
2390 1919 Pls
2390 1790 Pls
2397 1978 Pls
2397 1642 Pls
2400 1688 Pls
2405 2119 Pls
2406 1577 Pls
2409 1711 Pls
2411 1761 Pls
2412 1831 Pls
2413 1588 Pls
2414 2073 Pls
2419 1698 Pls
2427 1628 Pls
2428 1961 Pls
2428 1686 Pls
2429 1650 Pls
2429 1829 Pls
2430 1627 Pls
2430 1571 Pls
2430 1581 Pls
2431 1661 Pls
2432 1556 Pls
2434 1835 Pls
2436 2039 Pls
2440 2312 Pls
2443 1555 Pls
2448 1875 Pls
2453 1849 Pls
2462 1778 Pls
2462 1793 Pls
2464 2258 Pls
2465 1555 Pls
2465 1692 Pls
2465 1723 Pls
2469 1718 Pls
2475 2257 Pls
2478 1838 Pls
2481 1745 Pls
2481 1682 Pls
2483 1619 Pls
2489 2264 Pls
2491 2412 Pls
2494 2158 Pls
2496 1979 Pls
2497 1920 Pls
2500 1882 Pls
2505 1889 Pls
2508 1923 Pls
2515 1976 Pls
2523 2071 Pls
2524 2038 Pls
2532 1912 Pls
2533 1936 Pls
2536 2058 Pls
2540 2065 Pls
2542 2300 Pls
2545 2403 Pls
2550 2311 Pls
2550 2340 Pls
2553 2317 Pls
2561 2547 Pls
2562 2227 Pls
2572 2564 Pls
2578 2228 Pls
2579 2586 Pls
2591 2345 Pls
2596 2666 Pls
2600 2395 Pls
2612 2607 Pls
2614 2655 Pls
2615 2627 Pls
2620 2444 Pls
2621 2444 Pls
2624 2392 Pls
2628 2616 Pls
2629 2519 Pls
2634 2459 Pls
2636 2481 Pls
2639 2666 Pls
2643 2531 Pls
2643 2651 Pls
2652 2578 Pls
2656 2491 Pls
2657 2615 Pls
2658 2549 Pls
2662 2666 Pls
2668 2660 Pls
2668 2773 Pls
2668 2727 Pls
2670 2647 Pls
2671 2771 Pls
2701 2699 Pls
2701 2754 Pls
2702 2730 Pls
2706 2825 Pls
2707 2879 Pls
2715 2731 Pls
2742 2912 Pls
2772 3001 Pls
2773 2981 Pls
2777 3001 Pls
2780 3030 Pls
2781 3007 Pls
2787 3067 Pls
2792 3124 Pls
2798 3083 Pls
2804 3112 Pls
2805 3149 Pls
2809 3090 Pls
2826 3124 Pls
2838 3188 Pls
2902 3272 Pls
2909 3291 Pls
2913 3305 Pls
2913 3301 Pls
2913 3310 Pls
2915 3315 Pls
2961 3393 Pls
2967 3397 Pls
2986 3466 Pls
3005 3474 Pls
3009 3477 Pls
3009 3481 Pls
3010 3474 Pls
3011 3479 Pls
3011 3483 Pls
3011 3479 Pls
3015 3484 Pls
3015 3497 Pls
3016 3491 Pls
3017 3486 Pls
3019 3488 Pls
3020 3520 Pls
3020 3488 Pls
3020 3493 Pls
3023 3492 Pls
3023 3517 Pls
3025 3489 Pls
3026 3496 Pls
3027 3496 Pls
3027 3502 Pls
3031 3508 Pls
3032 3513 Pls
3032 3499 Pls
3034 3512 Pls
3038 3505 Pls
3041 3511 Pls
3046 3510 Pls
3051 3528 Pls
3051 3525 Pls
3054 3532 Pls
3058 3533 Pls
3060 3532 Pls
3063 3541 Pls
3063 3536 Pls
3065 3542 Pls
3065 3535 Pls
3066 3547 Pls
3067 3531 Pls
3069 3555 Pls
3070 3547 Pls
3074 3549 Pls
3077 3552 Pls
3079 3552 Pls
3085 3543 Pls
3086 3560 Pls
3088 3566 Pls
3088 3561 Pls
3094 3568 Pls
3096 3567 Pls
3097 3565 Pls
3112 3577 Pls
3118 3587 Pls
3120 3591 Pls
3124 3570 Pls
3129 3584 Pls
3130 3592 Pls
3133 3597 Pls
3136 3602 Pls
3136 3601 Pls
3136 3599 Pls
3139 3606 Pls
3140 3600 Pls
3141 3601 Pls
3143 3597 Pls
3144 3601 Pls
3147 3609 Pls
3147 3596 Pls
3149 3608 Pls
3154 3610 Pls
3155 3611 Pls
3158 3610 Pls
3158 3610 Pls
3161 3611 Pls
3163 3599 Pls
3163 3613 Pls
3163 3598 Pls
3164 3616 Pls
3165 3617 Pls
3166 3611 Pls
3168 3604 Pls
3168 3616 Pls
3170 3612 Pls
3171 3621 Pls
3172 3619 Pls
3172 3623 Pls
3172 3623 Pls
3174 3622 Pls
3174 3618 Pls
3175 3627 Pls
3176 3631 Pls
3176 3617 Pls
3176 3623 Pls
3177 3624 Pls
3177 3623 Pls
3178 3613 Pls
3178 3625 Pls
3178 3627 Pls
3179 3627 Pls
3180 3611 Pls
3180 3607 Pls
3181 3624 Pls
3181 3622 Pls
3182 3612 Pls
3182 3614 Pls
3182 3615 Pls
3182 3627 Pls
3182 3630 Pls
3183 3623 Pls
3183 3628 Pls
3183 3630 Pls
3185 3619 Pls
3185 3630 Pls
3185 3624 Pls
3185 3628 Pls
3185 3616 Pls
3185 3631 Pls
3186 3628 Pls
3186 3628 Pls
3187 3629 Pls
3187 3615 Pls
3188 3628 Pls
3189 3630 Pls
3189 3617 Pls
3190 3632 Pls
3190 3628 Pls
3192 3631 Pls
3192 3632 Pls
3193 3630 Pls
3193 3630 Pls
3193 3630 Pls
3194 3635 Pls
3194 3631 Pls
3196 3634 Pls
3201 3634 Pls
3246 3651 Pls
3264 3651 Pls
3299 2582 Pls
3302 3655 Pls
3602 3695 Pls
4407 3707 Pls
% End plot #1
1.000 UL
LTb
LCb setrgbcolor
735 3869 N
735 480 L
4034 0 V
0 3389 V
-4034 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
